.TH man 3 "21 July 2020" "1.0" "_printf man page"
.SH Name
.B _printf
- send to stdout a formated string of characters
.SH SYNOPSIS
#include "holberton.h"
.br
\fIint\fR
.br
.B printf (\fIconst\fR \fIchar\fR \fI*format\fR, \fI...\fR);
.SH DESCRIPTION
.B _printf()
Writes output to stdout, the standaroutput stream. 
.I Format
Under the control of a format string that specifies how subsequent arguments
.B Return Value
On success _printf returns the number of characters printed (excluding the null byte used to endoutput to strings).
In case of error, _printf returns:
.B -1.

.SH Format string
It is a character string, writen to stduot.
It is also composed by zero or more conversion specifications.
Each conversion specification is introduced by the character %, and ends with a conversion specifier.
The arguments are used in the order given by the user.

.SH Conversion specifier
An character that specifies the type of conversion to be applied. The options are:
.TP
.BR c
The argument is converted to char, and then writes it to standard output.
.TP
.B s
Takes a char * as an argument, and writes it to standard output.
.TP
.B S
Takes a char * as an argument, and writes it to standard output. Non printable characters are printed as "\x" followed by their ASCII values in a two digit hexadecimal number.
.TP
.B d, i
Takes an integer as argument, converts it to decimal notation and  writes to standard output.
.TP
.B x, X
Takes an unsigned integer as an argument,  convertes it to lowercase(x) hexadecimal notation, or uppercase(X) hexadecimal notation and writes it to standar output.
.TP
.B u
Takes and unsigned int as an argument, convertes it to decimal notation and writes it to standard output.
.TP
.B o, b
Takes an unsigned integer, converts it to octal(o) notation or binary(b) notation and writes it to standard output.
.TP
.B r
Takes a char * as argument, and writes it to standard output string, but in reverse. 
.TP
.B R
Takes a char * as an arguent, and converts it into ROT13 notation, and writes it to standard output.
.TP
.B %
A '%' character is written to standar output.
.B p
A memory address is taken as an argument, and written in hexadecimal notation to standard output.
.SH EXAMPLE
if you want to print the adress in memory of a variable:

#include "holberton.h"

_printf("%p\n", &a);
.SH SEE ALSO
.I printf(3)
.SH BUGS
No known bugs.
.SH AUTHOR
Deyber Casta√±eda, Tomas Gomez Velez.
